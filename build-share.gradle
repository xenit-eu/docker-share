apply plugin: 'eu.xenit.docker-alfresco'

if (new File("${project.projectDir}/../overload.gradle").exists())
    apply from: "${project.projectDir}/../overload.gradle"
if (new File("${project.projectDir}/overload.gradle").exists())
    apply from: "${project.projectDir}/overload.gradle"

def skeleton = ":${project.share.version.major}" + "." + "${project.share.version.minor}" + "-skeleton"
def path = "${skeleton}:buildDockerImage"
afterEvaluate {
    createDockerFile.dependsOn(path)
}

dockerAlfresco {
    baseImage = { project(skeleton).getTasks().getByName('buildDockerImage').getImageId() }
    dockerBuild {
        if (!(project.hasProperty("repoName"))) {
            ext.repoName = "hub.xenit.eu"
        }
	def namespace = (project.share.flavor == "enterprise" ? "alfresco-enterprise" : "public");
	repository = ((repoName == "hub.xenit.eu") ?
		      "${repoName}" + "/" + namespace + "/" + "alfresco-share-${project.share.flavor}" :
		      "${repoName}" + "/" + "alfresco-share-${project.share.flavor}")		
        tags = calcTags(project.share.version)
        automaticTags = false
    }
}

createDockerFile {
    environmentVariable('SHARE_FLAVOR', "${project.share.flavor}")
    environmentVariable('SHARE_VERSION', "${project.share.version.major}.${project.share.version.minor}.${project.share.version.rev}")
}

docker {
    if(System.getenv("DOCKER_USER") != null) {
        registryCredentials {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }
}

